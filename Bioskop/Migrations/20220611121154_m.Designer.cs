// <auto-generated />
using System;
using Bioskop.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bioskop.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220611121154_m")]
    partial class m
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bioskop.Models.Film", b =>
                {
                    b.Property<Guid>("FilmID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Drzava")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Godina")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalniNaziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reziser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Trajanje")
                        .HasColumnType("int");

                    b.HasKey("FilmID");

                    b.ToTable("Film");

                    b.HasData(
                        new
                        {
                            FilmID = new Guid("94e9fb20-1834-433c-b588-4a6e4eb32150"),
                            Drzava = "USA",
                            Godina = 2015,
                            Naziv = "Ratatui",
                            Opis = "Opis",
                            OriginalniNaziv = "Ratatuille",
                            Reziser = "Brad Bird",
                            Trajanje = 122
                        },
                        new
                        {
                            FilmID = new Guid("1ae8137b-1674-4c91-a4b5-87a133f5dd87"),
                            Drzava = "USA",
                            Godina = 2021,
                            Naziv = "Kraljica od velveta",
                            OriginalniNaziv = "The velvet queen",
                            Reziser = "Marie Amiguet",
                            Trajanje = 121
                        },
                        new
                        {
                            FilmID = new Guid("3032e0d3-a212-4c56-b36a-be5604dd7646"),
                            Drzava = "USA",
                            Godina = 2021,
                            Naziv = "Belfast",
                            OriginalniNaziv = "Belfast",
                            Reziser = "Kenneth Branagh",
                            Trajanje = 144
                        });
                });

            modelBuilder.Entity("Bioskop.Models.Korisnik", b =>
                {
                    b.Property<Guid>("KorisnikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TipKorisnikaID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("KorisnikID");

                    b.HasIndex("TipKorisnikaID");

                    b.ToTable("Korisnik");

                    b.HasData(
                        new
                        {
                            KorisnikID = new Guid("955f059b-94d9-442f-b7df-4b42538b7e07"),
                            Email = "nikolina.kika23@gmail.com",
                            Ime = "Nikolina",
                            KorisnickoIme = "kikakika",
                            Lozinka = "lozzzzinka",
                            Prezime = "Vukovic",
                            Telefon = "063595223",
                            TipKorisnikaID = new Guid("bc679089-e19f-43e4-946f-651ffbdb2afb")
                        },
                        new
                        {
                            KorisnikID = new Guid("94e9fb20-1834-433c-b588-4a6e4eb32150"),
                            Email = "petrapetra@gmail.com",
                            Ime = "Petra",
                            KorisnickoIme = "petra1",
                            Lozinka = "1233342",
                            Prezime = "Vukovic",
                            Telefon = "063593423",
                            TipKorisnikaID = new Guid("bc679089-e19f-43e4-946f-651ffbdb2afb")
                        },
                        new
                        {
                            KorisnikID = new Guid("167a01c0-2e68-46a8-b201-3a23e3a20bff"),
                            Email = "mile@gmail.com",
                            Ime = "Milenko",
                            KorisnickoIme = "mile123",
                            Lozinka = "lozinkalozinka",
                            Prezime = "Milovac",
                            Telefon = "062593423",
                            TipKorisnikaID = new Guid("bc679089-e19f-43e4-946f-651ffbdb2afb")
                        });
                });

            modelBuilder.Entity("Bioskop.Models.Kupovina", b =>
                {
                    b.Property<Guid>("KupovinaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KorisnikID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Placeno")
                        .HasColumnType("bit");

                    b.Property<float>("UkupanIznos")
                        .HasColumnType("real");

                    b.Property<DateTime>("VremePlacanja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VremeRezervacije")
                        .HasColumnType("datetime2");

                    b.HasKey("KupovinaID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("Kupovina");

                    b.HasData(
                        new
                        {
                            KupovinaID = new Guid("0ff62e96-3ace-4de3-a515-849a3e901afe"),
                            KorisnikID = new Guid("955f059b-94d9-442f-b7df-4b42538b7e07"),
                            Placeno = true,
                            UkupanIznos = 0f,
                            VremePlacanja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VremeRezervacije = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            KupovinaID = new Guid("d655239b-4ca7-4bd4-a154-9e4551976e38"),
                            KorisnikID = new Guid("94e9fb20-1834-433c-b588-4a6e4eb32150"),
                            Placeno = true,
                            UkupanIznos = 0f,
                            VremePlacanja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VremeRezervacije = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            KupovinaID = new Guid("2e026a0e-58b5-4c7a-8a8c-7d92bbc006c4"),
                            KorisnikID = new Guid("167a01c0-2e68-46a8-b201-3a23e3a20bff"),
                            Placeno = false,
                            UkupanIznos = 0f,
                            VremePlacanja = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            VremeRezervacije = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Bioskop.Models.Projekcija", b =>
                {
                    b.Property<Guid>("ProjekcijaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BrojStampanihKarata")
                        .HasColumnType("int");

                    b.Property<Guid>("FilmID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Vreme")
                        .HasColumnType("datetime2");

                    b.HasKey("ProjekcijaID");

                    b.HasIndex("FilmID");

                    b.ToTable("Projekcija");

                    b.HasData(
                        new
                        {
                            ProjekcijaID = new Guid("955f059b-94d9-442f-b7df-4b42538b7e07"),
                            BrojStampanihKarata = 150,
                            FilmID = new Guid("94e9fb20-1834-433c-b588-4a6e4eb32150"),
                            Vreme = new DateTime(2022, 6, 11, 14, 11, 48, 335, DateTimeKind.Local).AddTicks(8759)
                        },
                        new
                        {
                            ProjekcijaID = new Guid("bc679089-e19f-43e4-946f-651ffbdb2afb"),
                            BrojStampanihKarata = 150,
                            FilmID = new Guid("1ae8137b-1674-4c91-a4b5-87a133f5dd87"),
                            Vreme = new DateTime(2022, 6, 11, 14, 11, 48, 360, DateTimeKind.Local).AddTicks(4036)
                        },
                        new
                        {
                            ProjekcijaID = new Guid("167a01c0-2e68-46a8-b201-3a23e3a20bff"),
                            BrojStampanihKarata = 150,
                            FilmID = new Guid("1ae8137b-1674-4c91-a4b5-87a133f5dd87"),
                            Vreme = new DateTime(2022, 6, 11, 14, 11, 48, 360, DateTimeKind.Local).AddTicks(4101)
                        });
                });

            modelBuilder.Entity("Bioskop.Models.Sediste", b =>
                {
                    b.Property<Guid>("SedisteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BrojReda")
                        .HasColumnType("int");

                    b.Property<int>("BrojSedista")
                        .HasColumnType("int");

                    b.HasKey("SedisteID");

                    b.ToTable("Sediste");

                    b.HasData(
                        new
                        {
                            SedisteID = new Guid("4a1f75a1-b2d9-41e5-af55-2c118ea20423"),
                            BrojReda = 1,
                            BrojSedista = 1
                        },
                        new
                        {
                            SedisteID = new Guid("58ec047e-00fc-4e84-a4ce-5aaca90638c2"),
                            BrojReda = 1,
                            BrojSedista = 2
                        },
                        new
                        {
                            SedisteID = new Guid("9fb310e0-927f-4d4d-96a2-c6ee8dcaf9a9"),
                            BrojReda = 1,
                            BrojSedista = 3
                        });
                });

            modelBuilder.Entity("Bioskop.Models.SedisteProjekcije", b =>
                {
                    b.Property<Guid>("SedisteID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjekcijaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Cena")
                        .HasColumnType("real");

                    b.Property<Guid>("KupovinaID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SedisteID", "ProjekcijaID");

                    b.HasIndex("KupovinaID");

                    b.HasIndex("ProjekcijaID");

                    b.ToTable("SedisteProjekcije");

                    b.HasData(
                        new
                        {
                            SedisteID = new Guid("4a1f75a1-b2d9-41e5-af55-2c118ea20423"),
                            ProjekcijaID = new Guid("955f059b-94d9-442f-b7df-4b42538b7e07"),
                            Cena = 350f,
                            KupovinaID = new Guid("0ff62e96-3ace-4de3-a515-849a3e901afe")
                        },
                        new
                        {
                            SedisteID = new Guid("58ec047e-00fc-4e84-a4ce-5aaca90638c2"),
                            ProjekcijaID = new Guid("bc679089-e19f-43e4-946f-651ffbdb2afb"),
                            Cena = 350f,
                            KupovinaID = new Guid("d655239b-4ca7-4bd4-a154-9e4551976e38")
                        },
                        new
                        {
                            SedisteID = new Guid("9fb310e0-927f-4d4d-96a2-c6ee8dcaf9a9"),
                            ProjekcijaID = new Guid("167a01c0-2e68-46a8-b201-3a23e3a20bff"),
                            Cena = 350f,
                            KupovinaID = new Guid("2e026a0e-58b5-4c7a-8a8c-7d92bbc006c4")
                        });
                });

            modelBuilder.Entity("Bioskop.Models.TipKorisnika", b =>
                {
                    b.Property<Guid>("TipKorisnikaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipKorisnikaID");

                    b.ToTable("TipKorisnika");

                    b.HasData(
                        new
                        {
                            TipKorisnikaID = new Guid("bc679089-e19f-43e4-946f-651ffbdb2afb"),
                            Naziv = "Registrovani korisnik"
                        },
                        new
                        {
                            TipKorisnikaID = new Guid("0475c5d6-8db1-461e-84f4-81a22451a834"),
                            Naziv = "Zaposleni"
                        },
                        new
                        {
                            TipKorisnikaID = new Guid("d7a80343-d802-43d6-b128-79ba8554acd2"),
                            Naziv = "Admin"
                        });
                });

            modelBuilder.Entity("Bioskop.Models.Zanr", b =>
                {
                    b.Property<Guid>("ZanrID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ZanrID");

                    b.ToTable("Zanr");

                    b.HasData(
                        new
                        {
                            ZanrID = new Guid("f876fbcc-a7d0-49f8-b6ef-9b5a59c44fa0"),
                            Naziv = "Dokumentarni"
                        },
                        new
                        {
                            ZanrID = new Guid("cb5b3279-811c-4ca4-abaa-69016ba157b6"),
                            Naziv = "Animirani"
                        },
                        new
                        {
                            ZanrID = new Guid("955f059b-94d9-442f-b7df-4b42538b7e07"),
                            Naziv = "Drama"
                        });
                });

            modelBuilder.Entity("Bioskop.Models.ZanrFilma", b =>
                {
                    b.Property<Guid>("ZanrID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FilmID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ZanrID", "FilmID");

                    b.HasIndex("FilmID");

                    b.ToTable("ZanrFilma");

                    b.HasData(
                        new
                        {
                            ZanrID = new Guid("cb5b3279-811c-4ca4-abaa-69016ba157b6"),
                            FilmID = new Guid("94e9fb20-1834-433c-b588-4a6e4eb32150")
                        },
                        new
                        {
                            ZanrID = new Guid("f876fbcc-a7d0-49f8-b6ef-9b5a59c44fa0"),
                            FilmID = new Guid("1ae8137b-1674-4c91-a4b5-87a133f5dd87")
                        },
                        new
                        {
                            ZanrID = new Guid("955f059b-94d9-442f-b7df-4b42538b7e07"),
                            FilmID = new Guid("3032e0d3-a212-4c56-b36a-be5604dd7646")
                        },
                        new
                        {
                            ZanrID = new Guid("955f059b-94d9-442f-b7df-4b42538b7e07"),
                            FilmID = new Guid("1ae8137b-1674-4c91-a4b5-87a133f5dd87")
                        });
                });

            modelBuilder.Entity("Bioskop.Models.Korisnik", b =>
                {
                    b.HasOne("Bioskop.Models.TipKorisnika", "TipKorisnika")
                        .WithMany()
                        .HasForeignKey("TipKorisnikaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipKorisnika");
                });

            modelBuilder.Entity("Bioskop.Models.Kupovina", b =>
                {
                    b.HasOne("Bioskop.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Korisnik");
                });

            modelBuilder.Entity("Bioskop.Models.Projekcija", b =>
                {
                    b.HasOne("Bioskop.Models.Film", "Film")
                        .WithMany()
                        .HasForeignKey("FilmID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Film");
                });

            modelBuilder.Entity("Bioskop.Models.SedisteProjekcije", b =>
                {
                    b.HasOne("Bioskop.Models.Kupovina", "Kupovina")
                        .WithMany("SedistaProjekcije")
                        .HasForeignKey("KupovinaID")
                        .OnDelete(DeleteBehavior.SetNull)
                        ;

                    b.HasOne("Bioskop.Models.Projekcija", "Projekcija")
                        .WithMany()
                        .HasForeignKey("ProjekcijaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bioskop.Models.Sediste", "Sediste")
                        .WithMany()
                        .HasForeignKey("SedisteID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Kupovina");

                    b.Navigation("Projekcija");

                    b.Navigation("Sediste");
                });

            modelBuilder.Entity("Bioskop.Models.ZanrFilma", b =>
                {
                    b.HasOne("Bioskop.Models.Film", "Film")
                        .WithMany()
                        .HasForeignKey("FilmID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bioskop.Models.Zanr", "Zanr")
                        .WithMany()
                        .HasForeignKey("ZanrID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Zanr");
                });

            modelBuilder.Entity("Bioskop.Models.Kupovina", b =>
                {
                    b.Navigation("SedistaProjekcije");
                });
#pragma warning restore 612, 618
        }
    }
}
